{
  "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
  "id": "16794",
  "self": "https://jira.suprema.co.kr/rest/api/2/issue/16794",
  "key": "COMMONR-151",
  "fields": {
    "resolution": null,
    "customfield_10510": null,
    "customfield_10500": "0.0",
    "customfield_10501": null,
    "customfield_10502": null,
    "customfield_12802": null,
    "customfield_12804": null,
    "customfield_10505": null,
    "customfield_12803": null,
    "customfield_10506": null,
    "customfield_12806": null,
    "customfield_10507": null,
    "customfield_12805": null,
    "customfield_10508": null,
    "customfield_12808": null,
    "customfield_10509": null,
    "lastViewed": null,
    "customfield_10180": null,
    "customfield_10181": null,
    "customfield_10182": null,
    "customfield_10183": null,
    "customfield_10184": null,
    "customfield_10185": null,
    "labels": [],
    "customfield_11702": null,
    "aggregatetimeoriginalestimate": null,
    "issuelinks": [
      {
        "id": "12294",
        "self": "https://jira.suprema.co.kr/rest/api/2/issueLink/12294",
        "type": {
          "id": "10201",
          "name": "Defect",
          "inward": "created by",
          "outward": "created",
          "self": "https://jira.suprema.co.kr/rest/api/2/issueLinkType/10201"
        },
        "outwardIssue": {
          "id": "16832",
          "key": "BSIIDII-283",
          "self": "https://jira.suprema.co.kr/rest/api/2/issue/16832",
          "fields": {
            "summary": "한 사용자에 여러 Wiegand Format의 카드가 등록되어 있을때 첫번째 등록한 포맷으로 밖에 인증되지 않는 현상.",
            "status": {
              "self": "https://jira.suprema.co.kr/rest/api/2/status/6",
              "description": "이 이슈는 올바른 해결책으로 완료된 것으로 간주됩니다. 닫힌 이슈는 다시 열기를 할 수 있습니다.",
              "iconUrl": "https://jira.suprema.co.kr/images/icons/statuses/closed.png",
              "name": "닫힘",
              "id": "6",
              "statusCategory": {
                "self": "https://jira.suprema.co.kr/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "완료"
              }
            },
            "priority": {
              "self": "https://jira.suprema.co.kr/rest/api/2/priority/2",
              "iconUrl": "https://jira.suprema.co.kr/images/icons/priorities/major.svg",
              "name": "Serious (A)",
              "id": "2"
            },
            "issuetype": {
              "self": "https://jira.suprema.co.kr/rest/api/2/issuetype/1",
              "id": "1",
              "description": "",
              "iconUrl": "https://jira.suprema.co.kr/secure/viewavatar?size=xsmall&avatarId=10303&avatarType=issuetype",
              "name": "버그",
              "subtask": false,
              "avatarId": 10303
            }
          }
        }
      }
    ],
    "assignee": null,
    "components": [],
    "customfield_10170": null,
    "customfield_10171": null,
    "customfield_10172": null,
    "customfield_10174": null,
    "customfield_10175": null,
    "customfield_10176": null,
    "customfield_10177": null,
    "customfield_10178": null,
    "customfield_10179": null,
    "customfield_10600": 9.0,
    "customfield_10601": [],
    "customfield_12901": null,
    "customfield_10602": null,
    "customfield_12900": null,
    "subtasks": [],
    "reporter": {
      "self": "https://jira.suprema.co.kr/rest/api/2/user?username=%EC%A1%B0%EC%9E%84%EC%84%B1",
      "name": "조임성",
      "key": "조임성",
      "emailAddress": "isjo@suprema.co.kr",
      "avatarUrls": {
        "48x48": "https://jira.suprema.co.kr/secure/useravatar?ownerId=%EC%A1%B0%EC%9E%84%EC%84%B1&avatarId=10607",
        "24x24": "https://jira.suprema.co.kr/secure/useravatar?size=small&ownerId=%EC%A1%B0%EC%9E%84%EC%84%B1&avatarId=10607",
        "16x16": "https://jira.suprema.co.kr/secure/useravatar?size=xsmall&ownerId=%EC%A1%B0%EC%9E%84%EC%84%B1&avatarId=10607",
        "32x32": "https://jira.suprema.co.kr/secure/useravatar?size=medium&ownerId=%EC%A1%B0%EC%9E%84%EC%84%B1&avatarId=10607"
      },
      "displayName": "조임성",
      "active": false,
      "timeZone": "Asia/Seoul"
    },
    "customfield_10168": null,
    "customfield_10169": null,
    "customfield_11800": null,
    "progress": {
      "progress": 0,
      "total": 0
    },
    "votes": {
      "self": "https://jira.suprema.co.kr/rest/api/2/issue/COMMONR-151/votes",
      "votes": 0,
      "hasVoted": false
    },
    "worklog": {
      "startAt": 0,
      "maxResults": 20,
      "total": 0,
      "worklogs": []
    },
    "issuetype": {
      "self": "https://jira.suprema.co.kr/rest/api/2/issuetype/10000",
      "id": "10000",
      "description": "Represents a Test",
      "iconUrl": "https://jira.suprema.co.kr/download/resources/com.xpandit.plugins.xray/images/test.png",
      "name": "Test",
      "subtask": false
    },
    "project": {
      "self": "https://jira.suprema.co.kr/rest/api/2/project/10000",
      "id": "10000",
      "key": "COMMONR",
      "name": "Common Requirement And Test Case",
      "projectTypeKey": "software",
      "avatarUrls": {
        "48x48": "https://jira.suprema.co.kr/secure/projectavatar?pid=10000&avatarId=10011",
        "24x24": "https://jira.suprema.co.kr/secure/projectavatar?size=small&pid=10000&avatarId=10011",
        "16x16": "https://jira.suprema.co.kr/secure/projectavatar?size=xsmall&pid=10000&avatarId=10011",
        "32x32": "https://jira.suprema.co.kr/secure/projectavatar?size=medium&pid=10000&avatarId=10011"
      },
      "projectCategory": {
        "self": "https://jira.suprema.co.kr/rest/api/2/projectCategory/10000",
        "id": "10000",
        "description": "Requirements And Test Cases For The BioStar System Device",
        "name": "BioStar System Device Requirement And Test Case"
      }
    },
    "customfield_11000": null,
    "customfield_10700": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2b7c4df3[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@394c901e[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7c726d66[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@21e3ce96[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b621046[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6b55d14a[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4a3981b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3b0b6167[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@30e0b660[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@75fafeb7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6d01d353[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@de197cd[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
    "resolutiondate": null,
    "watches": {
      "self": "https://jira.suprema.co.kr/rest/api/2/issue/COMMONR-151/watchers",
      "watchCount": 1,
      "isWatching": false
    },
    "customfield_11900": null,
    "customfield_11901": null,
    "updated": "2021-03-23T09:18:03.000+0900",
    "timeoriginalestimate": null,
    "description": null,
    "customfield_10251": null,
    "customfield_10252": null,
    "customfield_10253": null,
    "customfield_10254": null,
    "customfield_10255": null,
    "timetracking": {},
    "customfield_10257": null,
    "customfield_10247": null,
    "customfield_10005": "<table border='1' bordercolor='#79a1c9' style='background-color:#79a1c9' width='100%' cellpadding='3' cellspacing='3'><tr><td></td><td>Step</td><td>Inputs/Data</td><td>Expected Results</td></tr><tr><td>1</td><td><p>1. Master-Slave and Wiegand로 구성한다.<br/>2. Device Func &gt; Wiegnand를 선택한다.<br/>3. Wiegand &gt; FormatID : H10301(26bit)로 선택한다.<br/>4. InputMask : 1,2,3,4 선택한다.<br/>5. CardMask : 1,2,3,4 선택한다.<br/>6. CSNIndex : 2번을 선택한 후 장치 적용.<br/>7. Multi Wiegand &gt; 1번에 37bit 10304 설정.<br/>8. Multi Wiegand &gt; 2번에 35bit 설정.<br/>9. Multi Wiegand &gt; 3번에 32bit 설정.<br/>10. Multi Wiegand &gt; 4번에 36bit 설정.<br/>11. 자동 매칭 &gt; 장치적용<br/>12. Diag Tool에서 확인</p></td><td><p>1. Wiegand &gt; FormatID : H10301(26bit)<br/>2. InputMask : 1,2,3,4<br/>3. CardMask : 1,2,3,4<br/>4. CSNIndex : 2번<br/>5. Multi Wiegand &gt; 1번에 37bit 10304<br/>6. Multi Wiegand &gt; 2번에 35bit<br/>7. Multi Wiegand &gt; 3번에 32bit<br/>8. Multi Wiegand &gt; 4번에 36bit</p></td><td><p>1. CSN 35bit로 카드가 읽혀야 한다.<br/>2. Wiegand 26bit를 제외하고 Master, Slave, Wiegand 장치에서 37bit, 35bit, 32bit, 36bit로 동작해야 한다.</p></td></tr><tr><td>2</td><td><p>1. Master-Slave and Wiegand로 구성한다.<br/>2. Device Func &gt; Wiegnand를 선택한다.<br/>3. Wiegand &gt; FormatID : H10301(26bit)로 선택한다.<br/>4. InputMask : 1,2,3,4 선택한다.<br/>5. CardMask : 미선택<br/>6. CSNIndex : 2번을 선택한 후 장치 적용.<br/>7. Multi Wiegand &gt; 1번에 37bit 10304 설정.<br/>8. Multi Wiegand &gt; 2번에 35bit 설정.<br/>9. Multi Wiegand &gt; 3번에 32bit 설정.<br/>10. Multi Wiegand &gt; 4번에 36bit 설정.<br/>11. 자동 매칭 &gt; 장치적용<br/>12. Diag Tool에서 확인</p></td><td><p>1. Wiegand &gt; FormatID : H10301(26bit)<br/>2. InputMask : 1,2,3,4<br/>3. CardMask : 미선택<br/>4. CSNIndex : 2번<br/>5. Multi Wiegand &gt; 1번에 37bit 10304<br/>6. Multi Wiegand &gt; 2번에 35bit<br/>7. Multi Wiegand &gt; 3번에 32bit<br/>8. Multi Wiegand &gt; 4번에 36bit</p></td><td><p>1. CSN 35bit로 카드가 읽혀야 한다.<br/>2. Master는 26bit로 동작하고, Slave, Wiegand 장치에서 37bit, 35bit, 32bit, 36bit로 동작해야 한다.</p></td></tr><tr><td>3</td><td><p>1. Master-Slave and Wiegand로 구성한다.<br/>2. Device Func &gt; Wiegnand를 선택한다.<br/>3. Wiegand &gt; FormatID : H10301(26bit)로 선택한다.<br/>4. InputMask : 2 선택한다.<br/>5. CardMask : 2 선택한다.<br/>6. CSNIndex : 2번을 선택한 후 장치 적용.<br/>7. Multi Wiegand &gt; 1번에 37bit 10304 설정.<br/>8. Multi Wiegand &gt; 2번에 35bit 설정.<br/>9. Multi Wiegand &gt; 3번에 32bit 설정.<br/>10. Multi Wiegand &gt; 4번에 36bit 설정.<br/>11. 자동 매칭 &gt; 장치적용<br/>12. Diag Tool에서 확인</p></td><td><p>1. Wiegand &gt; FormatID : H10301(26bit)<br/>2. InputMask : 2<br/>3. CardMask : 2<br/>4. CSNIndex : 2번<br/>5. Multi Wiegand &gt; 1번에 37bit 10304<br/>6. Multi Wiegand &gt; 2번에 35bit<br/>7. Multi Wiegand &gt; 3번에 32bit<br/>8. Multi Wiegand &gt; 4번에 36bit</p></td><td><p>1. CSN 35bit로 카드가 읽혀야 한다.<br/>2. Master, Slave, Wiegand 장치에서 35bit로 동작해야 한다.</p></td></tr><tr><td>4</td><td><p>1. Master-Slave and Wiegand로 구성한다.<br/>2. Device Func &gt; Wiegnand를 선택한다.<br/>3. Wiegand &gt; FormatID : H10301(26bit)로 선택한다.<br/>4. InputMask : 1,2,3,4,5 선택한다.<br/>5. CardMask : 1,2,3,4,5 선택한다.<br/>6. CSNIndex : 2번을 선택한 후 장치 적용.<br/>7. Multi Wiegand &gt; 1번에 37bit 10304 설정.<br/>8. Multi Wiegand &gt; 2번에 35bit 설정.<br/>9. Multi Wiegand &gt; 3번에 32bit 설정.<br/>10. Multi Wiegand &gt; 4번에 36bit 설정.<br/>11. Multi Wiegand &gt; 5번에 26bit 설정.<br/>12. 자동 매칭 &gt; 장치적용<br/>13. Diag Tool에서 확인</p></td><td><p>1. Wiegand &gt; FormatID : H10301(26bit)<br/>2. InputMask : 1,2,3,4<br/>3. CardMask : 1,2,3,4<br/>4. CSNIndex : 2번<br/>5. Multi Wiegand &gt; 1번에 37bit 10304<br/>6. Multi Wiegand &gt; 2번에 35bit<br/>7. Multi Wiegand &gt; 3번에 32bit<br/>8. Multi Wiegand &gt; 4번에 36bit<br/>9. Multi Wiegand &gt; 4번에 26bit</p></td><td><p>1. CSN 35bit로 카드가 읽혀야 한다.<br/>2. Master, Slave, Wiegand 장치에서 37bit, 35bit, 32bit, 36bit, 26bit로 동작해야 한다.</p></td></tr><tr><td>5</td><td><p>1. Master-Slave and Wiegand로 구성한다.<br/>2. Device Func &gt; Wiegnand를 선택한다.<br/>3. Wiegand &gt; FormatID : H10301(26bit)로 선택한다.<br/>4. InputMask : 1,2,3,4 선택한다.<br/>5. CardMask : 1,2,3,4 선택한다.<br/>6. CSNIndex : 미설정.<br/>7. Multi Wiegand &gt; 1번에 37bit 10304 설정.<br/>8. Multi Wiegand &gt; 2번에 37bit 10302 설정.<br/>9. Multi Wiegand &gt; 3번에 32bit 설정.<br/>10. Multi Wiegand &gt; 4번에 36bit 설정.<br/>11. 자동 매칭 &gt; 장치적용<br/>12. Diag Tool에서 확인</p></td><td><p>1. Wiegand &gt; FormatID : H10301(26bit)<br/>2. InputMask : 1,2,3,4<br/>3. CardMask : 1,2,3,4<br/>4. CSNIndex : 미설정<br/>5. Multi Wiegand &gt; 1번에 37bit 10304<br/>6. Multi Wiegand &gt; 2번에 37bit 10302<br/>7. Multi Wiegand &gt; 3번에 32bit<br/>8. Multi Wiegand &gt; 4번에 36bit</p></td><td><p>1. CSN 26bit로 카드가 읽혀야 한다.<br/>2. 37bit이고 Parity Field가 동일한 경우, Multi Wiegand 1번으로만 동작한다.</p></td></tr><tr><td>6</td><td><p>1. Wiegand Out에서 Bypass 미사용 선택.<br/>2. Device Func &gt; Wiegnand를 선택한다.<br/>3. Wiegand &gt; FormatID : H10301(26bit)로 선택한다.<br/>4. InputMask : 1,2,3,4 선택한다.<br/>5. CardMask : 1,2,3,4 선택한다.<br/>6. CSNIndex : 2번 선택 한 후 장치에 적용.<br/>7. Multi Wiegand &gt; 1번에 37bit 10304 설정.<br/>8. Multi Wiegand &gt; 2번에 37bit 10302 설정.<br/>9. Multi Wiegand &gt; 3번에 32bit 설정.<br/>10. Multi Wiegand &gt; 4번에 36bit 설정.<br/>11. 자동 매칭 &gt; 장치적용<br/>12. Diag Tool에서 확인</p></td><td><p>1. Wiegand &gt; FormatID : H10301(26bit)<br/>2. InputMask : 1,2,3,4<br/>3. CardMask : 1,2,3,4<br/>4. CSNIndex : 2번<br/>5. Multi Wiegand &gt; 1번에 37bit 10304<br/>6. Multi Wiegand &gt; 2번에 35bit<br/>7. Multi Wiegand &gt; 3번에 32bit<br/>8. Multi Wiegand &gt; 4번에 36bit</p></td><td><p>1. 26bit로 Wiegand Out이 된다.<br/>(Wiegand &gt; FormatID에 설정한 Format에 따라 읽히는 Format이 달라진다.)</p></td></tr><tr><td>7</td><td><p>1. Wiegand Format이 각각 다르게 저장된 카드를 가진 사용자들을 만든다.<br/>(예 : 1번 사용자 : 26bit / 2번 사용자 : 37bit)<br/>2. Wiegand Bypass를 미사용 선택.<br/>3. 1번 사용자에 등록된 카드를 인증시도.<br/>4. 2번 사용자에 등록된 카드를 인증 시도.</p></td><td><p>1. Wiegand Format이 각각 다르게 저장된 카드를 가진 사용자들을 만든다.<br/>(예 : 1번 사용자 : 26bit / 2번 사용자 : 37bit) </p></td><td><p>1. 1번 사용자는 26bit로 카드가 읽힌다.<br/>2. 2번 사용자는 37bit로 카드가 읽힌다.</p></td></tr><tr><td>8</td><td><p>1. Wiegand Format이 각각 다르게 저장된 카드를 가진 사용자를 만든다.<br/>(예 : 1번 사용자 : 26bit , 37bit)<br/>2. Wiegand Bypass를 미사용 선택.<br/>3. 1번 사용자에 등록된 카드를 인증시도.<br/>4. 2번 사용자에 등록된 카드를 인증 시도.</p></td><td><p>1. Wiegand Format이 각각 다르게 저장된 카드를 가진 사용자를 만든다.<br/>(예 : 1번 사용자 : 26bit , 37bit) </p></td><td><p>1. 26bit일때도 1번 사용자 카드가 읽혀야 한다.<br/>2. 37bit일때도 1번 사용자 카드가 읽혀야 한다.</p></td></tr><tr><td>9</td><td><p><span class=\"error\">&#91;iClass일때만 해당&#93;</span><br/>1. Smart Card를 등록한다.<br/>2. Wiegand Out한다.</p></td><td><p>1. Smart Card를 등록한다.</p></td><td><p>1. Wiegand Out시 본래 가지고 있던 Format으로 카드 ID를 내보낸다.<br/>(이전에는 User ID로 내보냈었음.)</p></td></tr></table>",
    "customfield_10248": null,
    "customfield_10006": [],
    "customfield_10007": [],
    "customfield_10008": {
      "issueId": 16794,
      "statuses": [
        {
          "statusResults": [
            {
              "latest": 1,
              "latestFinal": 0,
              "latestId": 6954,
              "latestFinalId": 3438
            }
          ]
        }
      ]
    },
    "customfield_12309": null,
    "customfield_10802": null,
    "customfield_10803": null,
    "customfield_10805": null,
    "summary": "Multi Wiegand(FwAutoTool)",
    "customfield_10240": null,
    "customfield_10000": {
      "self": "https://jira.suprema.co.kr/rest/api/2/customFieldOption/10000",
      "value": "Manual",
      "id": "10000"
    },
    "customfield_10243": null,
    "customfield_10001": null,
    "customfield_10244": null,
    "customfield_10002": null,
    "customfield_10003": null,
    "customfield_10246": null,
    "customfield_10004": {
      "steps": [
        {
          "id": 2763,
          "index": 1,
          "step": "1. Master-Slave and Wiegand로 구성한다.\n2. Device Func > Wiegnand를 선택한다.\n3. Wiegand > FormatID : H10301(26bit)로 선택한다.\n4. InputMask : 1,2,3,4 선택한다.\n5. CardMask : 1,2,3,4 선택한다.\n6. CSNIndex : 2번을 선택한 후 장치 적용.\n7. Multi Wiegand > 1번에 37bit 10304 설정.\n8. Multi Wiegand > 2번에 35bit 설정.\n9. Multi Wiegand > 3번에 32bit 설정.\n10. Multi Wiegand > 4번에 36bit 설정.\n11. 자동 매칭 > 장치적용\n12. Diag Tool에서 확인",
          "data": "1. Wiegand > FormatID : H10301(26bit)\n2. InputMask : 1,2,3,4\n3. CardMask : 1,2,3,4\n4. CSNIndex : 2번\n5. Multi Wiegand > 1번에 37bit 10304\n6. Multi Wiegand > 2번에 35bit\n7. Multi Wiegand > 3번에 32bit\n8. Multi Wiegand > 4번에 36bit",
          "result": "1. CSN 35bit로 카드가 읽혀야 한다.\n2. Wiegand 26bit를 제외하고 Master, Slave, Wiegand 장치에서 37bit, 35bit, 32bit, 36bit로 동작해야 한다.",
          "attachments": []
        },
        {
          "id": 2764,
          "index": 2,
          "step": "1. Master-Slave and Wiegand로 구성한다.\n2. Device Func > Wiegnand를 선택한다.\n3. Wiegand > FormatID : H10301(26bit)로 선택한다.\n4. InputMask : 1,2,3,4 선택한다.\n5. CardMask : 미선택\n6. CSNIndex : 2번을 선택한 후 장치 적용.\n7. Multi Wiegand > 1번에 37bit 10304 설정.\n8. Multi Wiegand > 2번에 35bit 설정.\n9. Multi Wiegand > 3번에 32bit 설정.\n10. Multi Wiegand > 4번에 36bit 설정.\n11. 자동 매칭 > 장치적용\n12. Diag Tool에서 확인",
          "data": "1. Wiegand > FormatID : H10301(26bit)\n2. InputMask : 1,2,3,4\n3. CardMask : 미선택\n4. CSNIndex : 2번\n5. Multi Wiegand > 1번에 37bit 10304\n6. Multi Wiegand > 2번에 35bit\n7. Multi Wiegand > 3번에 32bit\n8. Multi Wiegand > 4번에 36bit",
          "result": "1. CSN 35bit로 카드가 읽혀야 한다.\n2. Master는 26bit로 동작하고, Slave, Wiegand 장치에서 37bit, 35bit, 32bit, 36bit로 동작해야 한다.",
          "attachments": []
        },
        {
          "id": 2765,
          "index": 3,
          "step": "1. Master-Slave and Wiegand로 구성한다.\n2. Device Func > Wiegnand를 선택한다.\n3. Wiegand > FormatID : H10301(26bit)로 선택한다.\n4. InputMask : 2 선택한다.\n5. CardMask : 2 선택한다.\n6. CSNIndex : 2번을 선택한 후 장치 적용.\n7. Multi Wiegand > 1번에 37bit 10304 설정.\n8. Multi Wiegand > 2번에 35bit 설정.\n9. Multi Wiegand > 3번에 32bit 설정.\n10. Multi Wiegand > 4번에 36bit 설정.\n11. 자동 매칭 > 장치적용\n12. Diag Tool에서 확인",
          "data": "1. Wiegand > FormatID : H10301(26bit)\n2. InputMask : 2\n3. CardMask : 2\n4. CSNIndex : 2번\n5. Multi Wiegand > 1번에 37bit 10304\n6. Multi Wiegand > 2번에 35bit\n7. Multi Wiegand > 3번에 32bit\n8. Multi Wiegand > 4번에 36bit",
          "result": "1. CSN 35bit로 카드가 읽혀야 한다.\n2. Master, Slave, Wiegand 장치에서 35bit로 동작해야 한다.",
          "attachments": []
        },
        {
          "id": 2766,
          "index": 4,
          "step": "1. Master-Slave and Wiegand로 구성한다.\n2. Device Func > Wiegnand를 선택한다.\n3. Wiegand > FormatID : H10301(26bit)로 선택한다.\n4. InputMask : 1,2,3,4,5 선택한다.\n5. CardMask : 1,2,3,4,5 선택한다.\n6. CSNIndex : 2번을 선택한 후 장치 적용.\n7. Multi Wiegand > 1번에 37bit 10304 설정.\n8. Multi Wiegand > 2번에 35bit 설정.\n9. Multi Wiegand > 3번에 32bit 설정.\n10. Multi Wiegand > 4번에 36bit 설정.\n11. Multi Wiegand > 5번에 26bit 설정.\n12. 자동 매칭 > 장치적용\n13. Diag Tool에서 확인",
          "data": "1. Wiegand > FormatID : H10301(26bit)\n2. InputMask : 1,2,3,4\n3. CardMask : 1,2,3,4\n4. CSNIndex : 2번\n5. Multi Wiegand > 1번에 37bit 10304\n6. Multi Wiegand > 2번에 35bit\n7. Multi Wiegand > 3번에 32bit\n8. Multi Wiegand > 4번에 36bit\n9. Multi Wiegand > 4번에 26bit",
          "result": "1. CSN 35bit로 카드가 읽혀야 한다.\n2. Master, Slave, Wiegand 장치에서 37bit, 35bit, 32bit, 36bit, 26bit로 동작해야 한다.",
          "attachments": []
        },
        {
          "id": 2767,
          "index": 5,
          "step": "1. Master-Slave and Wiegand로 구성한다.\n2. Device Func > Wiegnand를 선택한다.\n3. Wiegand > FormatID : H10301(26bit)로 선택한다.\n4. InputMask : 1,2,3,4 선택한다.\n5. CardMask : 1,2,3,4 선택한다.\n6. CSNIndex : 미설정.\n7. Multi Wiegand > 1번에 37bit 10304 설정.\n8. Multi Wiegand > 2번에 37bit 10302 설정.\n9. Multi Wiegand > 3번에 32bit 설정.\n10. Multi Wiegand > 4번에 36bit 설정.\n11. 자동 매칭 > 장치적용\n12. Diag Tool에서 확인",
          "data": "1. Wiegand > FormatID : H10301(26bit)\n2. InputMask : 1,2,3,4\n3. CardMask : 1,2,3,4\n4. CSNIndex : 미설정\n5. Multi Wiegand > 1번에 37bit 10304\n6. Multi Wiegand > 2번에 37bit 10302\n7. Multi Wiegand > 3번에 32bit\n8. Multi Wiegand > 4번에 36bit",
          "result": "1. CSN 26bit로 카드가 읽혀야 한다.\n2. 37bit이고 Parity Field가 동일한 경우, Multi Wiegand 1번으로만 동작한다.\n",
          "attachments": []
        },
        {
          "id": 2768,
          "index": 6,
          "step": "1. Wiegand Out에서 Bypass 미사용 선택.\n2. Device Func > Wiegnand를 선택한다.\n3. Wiegand > FormatID : H10301(26bit)로 선택한다.\n4. InputMask : 1,2,3,4 선택한다.\n5. CardMask : 1,2,3,4 선택한다.\n6. CSNIndex : 2번 선택 한 후 장치에 적용.\n7. Multi Wiegand > 1번에 37bit 10304 설정.\n8. Multi Wiegand > 2번에 37bit 10302 설정.\n9. Multi Wiegand > 3번에 32bit 설정.\n10. Multi Wiegand > 4번에 36bit 설정.\n11. 자동 매칭 > 장치적용\n12. Diag Tool에서 확인",
          "data": "1. Wiegand > FormatID : H10301(26bit)\n2. InputMask : 1,2,3,4\n3. CardMask : 1,2,3,4\n4. CSNIndex : 2번\n5. Multi Wiegand > 1번에 37bit 10304\n6. Multi Wiegand > 2번에 35bit\n7. Multi Wiegand > 3번에 32bit\n8. Multi Wiegand > 4번에 36bit",
          "result": "1. 26bit로 Wiegand Out이 된다.\n(Wiegand > FormatID에 설정한 Format에 따라 읽히는 Format이 달라진다.)",
          "attachments": []
        },
        {
          "id": 2769,
          "index": 7,
          "step": "1. Wiegand Format이 각각 다르게 저장된 카드를 가진 사용자들을 만든다.\n(예 : 1번 사용자 : 26bit / 2번 사용자 : 37bit)\n2. Wiegand Bypass를 미사용 선택.\n3. 1번 사용자에 등록된 카드를 인증시도.\n4. 2번 사용자에 등록된 카드를 인증 시도.",
          "data": "1. Wiegand Format이 각각 다르게 저장된 카드를 가진 사용자들을 만든다.\n(예 : 1번 사용자 : 26bit / 2번 사용자 : 37bit) ",
          "result": "1. 1번 사용자는 26bit로 카드가 읽힌다.\n2. 2번 사용자는 37bit로 카드가 읽힌다.",
          "attachments": []
        },
        {
          "id": 2770,
          "index": 8,
          "step": "1. Wiegand Format이 각각 다르게 저장된 카드를 가진 사용자를 만든다.\n(예 : 1번 사용자 : 26bit , 37bit)\n2. Wiegand Bypass를 미사용 선택.\n3. 1번 사용자에 등록된 카드를 인증시도.\n4. 2번 사용자에 등록된 카드를 인증 시도.",
          "data": "1. Wiegand Format이 각각 다르게 저장된 카드를 가진 사용자를 만든다.\n(예 : 1번 사용자 : 26bit , 37bit) ",
          "result": "1. 26bit일때도 1번 사용자 카드가 읽혀야 한다.\n2. 37bit일때도 1번 사용자 카드가 읽혀야 한다.",
          "attachments": []
        },
        {
          "id": 2771,
          "index": 9,
          "step": "[iClass일때만 해당]\n1. Smart Card를 등록한다.\n2. Wiegand Out한다.",
          "data": "1. Smart Card를 등록한다.",
          "result": "1. Wiegand Out시 본래 가지고 있던 Format으로 카드 ID를 내보낸다.\n(이전에는 User ID로 내보냈었음.)",
          "attachments": []
        }
      ]
    },
    "customfield_10236": null,
    "customfield_10237": null,
    "environment": null,
    "customfield_10238": null,
    "customfield_10239": null,
    "duedate": null,
    "comment": {
      "comments": [],
      "maxResults": 0,
      "total": 0,
      "startAt": 0
    },
    "customfield_10230": null,
    "fixVersions": [],
    "customfield_10231": null,
    "customfield_10232": null,
    "customfield_10233": null,
    "customfield_12410": null,
    "customfield_10234": null,
    "customfield_10235": null,
    "customfield_10225": null,
    "customfield_12404": null,
    "customfield_10226": null,
    "customfield_12403": null,
    "customfield_10227": null,
    "customfield_12406": null,
    "customfield_10228": null,
    "customfield_10229": null,
    "customfield_10900": null,
    "customfield_12408": null,
    "customfield_10901": null,
    "customfield_10902": null,
    "customfield_10903": null,
    "customfield_12409": null,
    "customfield_10904": null,
    "customfield_10905": null,
    "customfield_10220": null,
    "priority": {
      "self": "https://jira.suprema.co.kr/rest/api/2/priority/10000",
      "iconUrl": "https://jira.suprema.co.kr/images/icons/priorities/blocker.svg",
      "name": "Fatal (S)",
      "id": "10000"
    },
    "customfield_10221": null,
    "customfield_12400": null,
    "customfield_12402": null,
    "customfield_10224": null,
    "customfield_10214": null,
    "customfield_10217": null,
    "customfield_10218": null,
    "timeestimate": null,
    "versions": [],
    "customfield_10219": null,
    "status": {
      "self": "https://jira.suprema.co.kr/rest/api/2/status/10000",
      "description": "",
      "iconUrl": "https://jira.suprema.co.kr/images/icons/statuses/open.png",
      "name": "할 일",
      "id": "10000",
      "statusCategory": {
        "self": "https://jira.suprema.co.kr/rest/api/2/statuscategory/2",
        "id": 2,
        "key": "new",
        "colorName": "blue-gray",
        "name": "할 일"
      }
    },
    "customfield_12510": null,
    "customfield_10213": null,
    "customfield_12511": null,
    "customfield_10203": null,
    "customfield_10204": null,
    "customfield_12502": null,
    "customfield_10205": null,
    "customfield_10206": null,
    "customfield_10207": null,
    "aggregatetimeestimate": null,
    "customfield_10208": null,
    "customfield_10209": null,
    "customfield_12509": null,
    "customfield_12508": null,
    "creator": {
      "self": "https://jira.suprema.co.kr/rest/api/2/user?username=%EC%A1%B0%EC%9E%84%EC%84%B1",
      "name": "조임성",
      "key": "조임성",
      "emailAddress": "isjo@suprema.co.kr",
      "avatarUrls": {
        "48x48": "https://jira.suprema.co.kr/secure/useravatar?ownerId=%EC%A1%B0%EC%9E%84%EC%84%B1&avatarId=10607",
        "24x24": "https://jira.suprema.co.kr/secure/useravatar?size=small&ownerId=%EC%A1%B0%EC%9E%84%EC%84%B1&avatarId=10607",
        "16x16": "https://jira.suprema.co.kr/secure/useravatar?size=xsmall&ownerId=%EC%A1%B0%EC%9E%84%EC%84%B1&avatarId=10607",
        "32x32": "https://jira.suprema.co.kr/secure/useravatar?size=medium&ownerId=%EC%A1%B0%EC%9E%84%EC%84%B1&avatarId=10607"
      },
      "displayName": "조임성",
      "active": false,
      "timeZone": "Asia/Seoul"
    },
    "aggregateprogress": {
      "progress": 0,
      "total": 0
    },
    "customfield_10320": null,
    "customfield_10321": null,
    "customfield_12501": null,
    "customfield_10202": null,
    "customfield_12500": null,
    "customfield_10313": "1|hzr667:",
    "customfield_10316": null,
    "customfield_10317": null,
    "timespent": null,
    "aggregatetimespent": null,
    "customfield_10310": null,
    "customfield_10302": null,
    "customfield_10303": null,
    "customfield_12601": null,
    "customfield_10304": null,
    "customfield_10305": null,
    "customfield_10308": null,
    "workratio": -1,
    "created": "2016-05-12T13:22:42.000+0900",
    "customfield_10533": null,
    "customfield_10534": null,
    "customfield_11501": null,
    "customfield_11503": null,
    "customfield_13001": null,
    "customfield_13000": null,
    "customfield_10530": null,
    "customfield_10531": null,
    "customfield_10532": null,
    "customfield_10401": null,
    "customfield_10522": null,
    "customfield_10402": null,
    "customfield_12700": null,
    "customfield_10524": null,
    "customfield_10525": null,
    "customfield_12702": null,
    "attachment": [],
    "customfield_10526": null,
    "customfield_12704": null,
    "customfield_10528": null,
    "customfield_12706": null,
    "customfield_10520": null,
    "customfield_10521": null,
    "customfield_10400": null,
    "customfield_10511": null,
    "customfield_10512": null,
    "customfield_11600": null,
    "customfield_10513": null,
    "customfield_10514": null,
    "customfield_10515": null,
    "customfield_10516": null,
    "customfield_10517": null,
    "customfield_10518": null,
    "customfield_10519": null
  }
}